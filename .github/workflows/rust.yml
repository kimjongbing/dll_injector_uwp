name: Rust

on:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: x86_64-pc-windows-msvc
        override: true
    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release --verbose
    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --verbose
    - name: Upload build artifact
      uses: actions/upload-artifact@v2
      with:
        name: dll_injector
        path: target/release/dll_injector.exe
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/release/dll_injector.exe
        asset_name: dll_injector.exe
        asset_content_type: application/octet-stream
